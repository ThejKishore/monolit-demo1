plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.github.node-gradle.node" version "3.1.1"
    id 'java'
}

group = 'com.kish.learn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

println( "${project.projectDir}/src/main/${frontEndProject}/npm")

node {
    // Version of node to use.
    version = '16.1.0'

    // Base URL for fetching node distributions (change if you have a mirror).
//    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.projectDir}/src/main/${frontEndProject}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.projectDir}/src/main/${frontEndProject}/npm")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/src/main/${frontEndProject}")
}


processResources{
    dependsOn 'copyFrontendToBuild'
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'
    from "$projectDir/src/main/${frontEndProject}/build/"
//    include "*"
    into "$buildDir/resources/main/static"
}



task npmBuild(type: NpmTask) {
    dependsOn 'npmInstall2'
    execOverrides {
//        it.ignoreExitValue = true
        it.workingDir = "src/main/${frontEndProject}"
    }
    args = ['run', 'build']
}

task npmShowVersion(type: NpmTask) {
    execOverrides {
        it.ignoreExitValue = true
        it.workingDir = "src/main/${frontEndProject}"
    }
    args = ['--version']
}

task npmInstall2(type: NpmTask) {
    dependsOn 'npmSetup'
    execOverrides {
        it.ignoreExitValue = true
        it.workingDir = "src/main/${frontEndProject}"
    }
    args = ['install']
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
